@func: int {
.b1:
  n.0: int = const 5;
  ret n.0;
}
@loop(infinite: bool, print: bool) {
.entry:
  v.init: int = undef;
  set v.0 v.init;
  jmp .loop.header;
.loop.header:
  v.0: int = get;
  br infinite .loop.body .loop.end;
.loop.body:
  set v.1 v.0;
  br print .loop.print .loop.next;
.loop.print:
  v.2: int = call @func;
  print v.2;
  set v.1 v.2;
  jmp .loop.next;
.loop.next:
  v.1: int = get;
  set v.0 v.1;
  jmp .loop.header;
.loop.end:
  ret;
}
@main {
.b1:
  infinite.0: bool = const false;
  print.0: bool = const true;
  call @loop infinite.0 print.0;
  ret;
}
